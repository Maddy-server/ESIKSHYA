// Code generated by sqlc. DO NOT EDIT.
// source: parents_token.sql

package db

import (
	"context"
)

const createParentsToken = `-- name: CreateParentsToken :exec
INSERT INTO parents_token(
    user_id, token
) VALUES (
    ?,?
)
`

type CreateParentsTokenParams struct {
	UserID int32  `json:"user_id"`
	Token  string `json:"token"`
}

func (q *Queries) CreateParentsToken(ctx context.Context, arg CreateParentsTokenParams) error {
	_, err := q.exec(ctx, q.createParentsTokenStmt, createParentsToken, arg.UserID, arg.Token)
	return err
}

const getParentsToken = `-- name: GetParentsToken :one
SELECT id, user_id, token FROM parents_token WHERE user_id=?
`

func (q *Queries) GetParentsToken(ctx context.Context, userID int32) (ParentsToken, error) {
	row := q.queryRow(ctx, q.getParentsTokenStmt, getParentsToken, userID)
	var i ParentsToken
	err := row.Scan(&i.ID, &i.UserID, &i.Token)
	return i, err
}

const updateParentsToken = `-- name: UpdateParentsToken :exec
UPDATE parents_token SET token=? WHERE user_id=?
`

type UpdateParentsTokenParams struct {
	Token  string `json:"token"`
	UserID int32  `json:"user_id"`
}

func (q *Queries) UpdateParentsToken(ctx context.Context, arg UpdateParentsTokenParams) error {
	_, err := q.exec(ctx, q.updateParentsTokenStmt, updateParentsToken, arg.Token, arg.UserID)
	return err
}
