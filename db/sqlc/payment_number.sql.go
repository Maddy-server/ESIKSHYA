// Code generated by sqlc. DO NOT EDIT.
// source: payment_number.sql

package db

import (
	"context"
	"database/sql"
)

const createPaymentNumber = `-- name: CreatePaymentNumber :exec
INSERT INTO payment_number(
    number,method,save,parent_id
) VALUES (
    ?,?,?,?
)
`

type CreatePaymentNumberParams struct {
	Number   string       `json:"number"`
	Method   string       `json:"method"`
	Save     sql.NullBool `json:"save"`
	ParentID int32        `json:"parent_id"`
}

func (q *Queries) CreatePaymentNumber(ctx context.Context, arg CreatePaymentNumberParams) error {
	_, err := q.exec(ctx, q.createPaymentNumberStmt, createPaymentNumber,
		arg.Number,
		arg.Method,
		arg.Save,
		arg.ParentID,
	)
	return err
}

const getPaymentNumberInfo = `-- name: GetPaymentNumberInfo :one
SELECT id, number, method, save, parent_id FROM payment_number WHERE parent_id=?
`

func (q *Queries) GetPaymentNumberInfo(ctx context.Context, parentID int32) (PaymentNumber, error) {
	row := q.queryRow(ctx, q.getPaymentNumberInfoStmt, getPaymentNumberInfo, parentID)
	var i PaymentNumber
	err := row.Scan(
		&i.ID,
		&i.Number,
		&i.Method,
		&i.Save,
		&i.ParentID,
	)
	return i, err
}
