// Code generated by sqlc. DO NOT EDIT.
// source: game_friend_lobby.sql

package db

import (
	"context"
	"time"
)

const createGameFriendLobby = `-- name: CreateGameFriendLobby :exec
INSERT INTO game_friend_lobby(
   user_id, op_id, status,created_at
) VALUES (
    ?,?,?,?
)
`

type CreateGameFriendLobbyParams struct {
	UserID    int32     `json:"user_id"`
	OpID      int32     `json:"op_id"`
	Status    string    `json:"status"`
	CreatedAt time.Time `json:"created_at"`
}

func (q *Queries) CreateGameFriendLobby(ctx context.Context, arg CreateGameFriendLobbyParams) error {
	_, err := q.exec(ctx, q.createGameFriendLobbyStmt, createGameFriendLobby,
		arg.UserID,
		arg.OpID,
		arg.Status,
		arg.CreatedAt,
	)
	return err
}

const deleteGameFriendLobby = `-- name: DeleteGameFriendLobby :exec
DELETE FROM game_friend_lobby WHERE id=?
`

func (q *Queries) DeleteGameFriendLobby(ctx context.Context, id int32) error {
	_, err := q.exec(ctx, q.deleteGameFriendLobbyStmt, deleteGameFriendLobby, id)
	return err
}

const getGameFriendLobby = `-- name: GetGameFriendLobby :one
SELECT id, user_id, op_id, status, created_at FROM game_friend_lobby WHERE user_id=? AND op_id=?
`

type GetGameFriendLobbyParams struct {
	UserID int32 `json:"user_id"`
	OpID   int32 `json:"op_id"`
}

func (q *Queries) GetGameFriendLobby(ctx context.Context, arg GetGameFriendLobbyParams) (GameFriendLobby, error) {
	row := q.queryRow(ctx, q.getGameFriendLobbyStmt, getGameFriendLobby, arg.UserID, arg.OpID)
	var i GameFriendLobby
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.OpID,
		&i.Status,
		&i.CreatedAt,
	)
	return i, err
}

const updateGameFriendLobby = `-- name: UpdateGameFriendLobby :exec
UPDATE game_friend_lobby SET status=? WHERE id=?
`

type UpdateGameFriendLobbyParams struct {
	Status string `json:"status"`
	ID     int32  `json:"id"`
}

func (q *Queries) UpdateGameFriendLobby(ctx context.Context, arg UpdateGameFriendLobbyParams) error {
	_, err := q.exec(ctx, q.updateGameFriendLobbyStmt, updateGameFriendLobby, arg.Status, arg.ID)
	return err
}
